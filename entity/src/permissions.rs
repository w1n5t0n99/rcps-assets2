//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "permissions")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl Related<super::roles::Entity> for Entity {
    fn to() -> RelationDef {
        super::roles_permissions::Relation::Roles.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::roles_permissions::Relation::Permissions.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
